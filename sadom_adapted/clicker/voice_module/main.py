import json, pyaudio, threading
from vosk import Model, KaldiRecognizer

from clicker.bin.config_parse import get_item_from_config

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ—Å–µ—Ç–∞–º–∏
from clicker.bin.funcs import run_preset
from clicker.bin.glob import bot  # –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Telegram

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–∏ Vosk
model = Model("/Users/Valerij/Downloads/sadom/clicker/voice_module/vosk-model-ru-0.42")
rec = KaldiRecognizer(model, 16000)
p = pyaudio.PyAudio()
stream = p.open(
    format=pyaudio.paInt16,
    channels=1,
    rate=16000,
    input=True,
    frames_per_buffer=8000
)
stream.start_stream()

# ID —á–∞—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å –≤ –∫–æ–Ω—Ñ–∏–≥–µ –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –±–æ—Ç–∞)
ADMIN_CHAT_ID = get_item_from_config('CHAT_ID')['chat_id']


def listen():
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥"""
    while True:
        data = stream.read(4000, exception_on_overflow=False)
        if rec.AcceptWaveform(data) and len(data) > 0:
            result = json.loads(rec.Result())
            text = result.get("text", "").lower()
            if not text:
                continue

            if text.startswith("–º–∏—à–∞"):
                command_text = text.replace("–º–∏—à–∞", "", 1).strip()
                yield command_text
            else:
                continue


def execute_preset(preset_name):
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–µ—Å–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
    try:
        print(f"[–ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ] –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–µ—Å–µ—Ç–∞: {preset_name}")

        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–µ—Å–µ—Ç
        run_preset(preset_name)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
        if bot and ADMIN_CHAT_ID:
            bot.send_message(
                ADMIN_CHAT_ID,
                f"üé§ [–ì–æ–ª–æ—Å–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞] –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø—Ä–µ—Å–µ—Ç: {preset_name}"
            )

    except Exception as e:
        print(f"[–ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ] –û—à–∏–±–∫–∞: {e}")


# –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ —Å –ø—Ä–µ—Å–µ—Ç–∞–º–∏
comands = {
    "—Ä–µ–∂–∏–º –æ–¥–∏–Ω": "1",
    "—Ä–µ–∂–∏–º –¥–≤–∞": "2",
    "—Ä–µ–∂–∏–º —Ç—Ä–∏": "bmstu",
}


def start_voice_control():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"""
    print("[–ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ] –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")
    for text in listen():
        print(f"[–ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ] –†–∞—Å–ø–æ–∑–Ω–∞–Ω–æ: {text}")

        if text == "–ø–æ–∫–∞":
            print("[–ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ] –°–∏—Å—Ç–µ–º–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞")
            quit()

        # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –∫–æ–º–∞–Ω–¥–∞—Ö
        preset_name = comands.get(text)
        if preset_name:
            execute_preset(preset_name)
        else:
            print(f"[–ì–æ–ª–æ—Å–æ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {text}")


# –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
voice_thread = threading.Thread(target=start_voice_control, daemon=True)
voice_thread.start()